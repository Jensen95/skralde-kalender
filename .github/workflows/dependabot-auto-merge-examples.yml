# Example workflows for automating Dependabot based on GitHub's official documentation
# Source: https://docs.github.com/en/code-security/dependabot/working-with-dependabot/automating-dependabot-with-github-actions

# OPTION 1: Basic auto-merge (no approval) - Works with GITHUB_TOKEN
name: Dependabot auto-merge (basic)
on: pull_request

permissions:
  contents: write
  pull-requests: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      - name: Enable auto-merge for Dependabot PRs
        # This will enable auto-merge but won't approve the PR
        # Useful if you have other workflows that handle approval
        if: steps.metadata.outputs.update-type == 'version-update:semver-patch'
        run: gh pr merge --auto --merge "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

---

# OPTION 2: With approval using PAT - Recommended
name: Dependabot auto-approve and merge
on: pull_request

permissions:
  contents: write
  pull-requests: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Approve PR
        # Approving requires a PAT with repo scope
        if: steps.metadata.outputs.update-type != 'version-update:semver-major'
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.DEPENDABOT_PAT}}
      
      - name: Enable auto-merge
        if: steps.metadata.outputs.update-type != 'version-update:semver-major'
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}

---

# OPTION 3: Using GitHub App for approval
name: Dependabot auto-merge with GitHub App
on: pull_request

permissions:
  contents: write
  pull-requests: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Generate GitHub App token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
      
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      - name: Approve and merge
        if: steps.metadata.outputs.update-type != 'version-update:semver-major'
        run: |
          gh pr review --approve "$PR_URL"
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}

---

# OPTION 4: Advanced example with labeling and conditional logic
name: Dependabot advanced automation
on: pull_request

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      
      # Add labels based on update type
      - name: Add labels
        run: |
          case "${{ steps.metadata.outputs.update-type }}" in
            "version-update:semver-major")
              gh pr edit "$PR_URL" --add-label "major-update,needs-review"
              ;;
            "version-update:semver-minor")
              gh pr edit "$PR_URL" --add-label "minor-update"
              ;;
            "version-update:semver-patch")
              gh pr edit "$PR_URL" --add-label "patch-update"
              ;;
          esac
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      
      # Auto-approve and merge based on conditions
      - name: Auto-approve safe updates
        if: |
          (steps.metadata.outputs.update-type == 'version-update:semver-patch') ||
          (steps.metadata.outputs.update-type == 'version-update:semver-minor' && 
           steps.metadata.outputs.dependency-type == 'direct:development')
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.DEPENDABOT_PAT}}
      
      - name: Enable auto-merge for approved updates
        if: |
          (steps.metadata.outputs.update-type == 'version-update:semver-patch') ||
          (steps.metadata.outputs.update-type == 'version-update:semver-minor' && 
           steps.metadata.outputs.dependency-type == 'direct:development')
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{github.event.pull_request.html_url}}
          GH_TOKEN: ${{secrets.GITHUB_TOKEN}}